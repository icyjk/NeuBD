package NeuBDProyectoSIITests;
import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.assertThat;

import java.util.HashMap;
import java.util.Map;

import org.junit.After;
import org.junit.Before;
import org.junit.Ignore;
// Generated by Selenium IDE
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;

import es.uma.informatica.sii.anotaciones.Requisitos;

public class PruebaCentroIT {
	private WebDriver driver;
	private Map<String, Object> vars;
	JavascriptExecutor js;
	private static final String UNIDAD_PERSISTENCIA = "ProyectoPU";
	private static final String CONTEXT_ROOT = "http://localhost:8080/ProyectoSII-war/";

	@Before
	public void setUp() {
		BaseDatos.inicializaBaseDatos(UNIDAD_PERSISTENCIA);
		driver = new FirefoxDriver();
		js = (JavascriptExecutor) driver;
		vars = new HashMap<String, Object>();
		driver.get("http://localhost:8080/ProyectoSII-war/");
	}
	@After
	public void tearDown() {
		driver.quit();
	}



	@Requisitos({"RF-18"})
	@Test
	public void crearCentroTest() {
		for(int i=0;i<=2;i++) {
			try {
				driver.get("http://0.0.0.0:8080/ProyectoSII-war/");
				driver.manage().window().setSize(new Dimension(825, 700));
				driver.findElement(By.id("formIndex:botonCentros")).click();
				driver.findElement(By.id("Centros:BotonCrear")).click();
				driver.findElement(By.id("centro:nombre")).click();
				driver.findElement(By.id("centro:nombre")).sendKeys("Test1");
				driver.findElement(By.id("centro:direccion")).click();
				driver.findElement(By.id("centro:direccion")).sendKeys("Test1");
				driver.findElement(By.id("centro:telefono")).click();
				driver.findElement(By.id("centro:telefono")).sendKeys("Test1");
				driver.findElement(By.id("centro:BotonAccion")).click();
				driver.findElement(By.id("formIndex:botonCentros")).click();
				driver.findElement(By.id("Centros:TablaCentros:1:SalidaNombre")).click();
				assertThat(driver.findElement(By.id("Centros:TablaCentros:2:SalidaNombre")).getText(), is("Test1"));
				break;
			} catch (Exception e) {
				// TODO: handle exception
			}
		}
		
	}



	//Para los tets hemos tenido que usar una estructura de un for junto con un try catch ya que algunas veces saltaba la excepcion StaleElementReferenceException 
	//y otras veces no. Hemos visto aqui https://www.softwaretestingmaterial.com/stale-element-reference-exception-selenium-webdriver/
	//que se soluciona asi.	
	@Requisitos({"RF-18"})
	@Test
	public void modificarCentroTest() {


		for(int i=0; i<=2;i++){
			try{
				driver.get("http://0.0.0.0:8080/ProyectoSII-war/");
				driver.manage().window().setSize(new Dimension(825, 713));
				driver.findElement(By.id("formIndex:botonCentros")).click();
				driver.findElement(By.id("Centros:TablaCentros:0:BotonModificar")).click();
				driver.findElement(By.id("centro:nombre")).click();
				driver.findElement(By.id("centro:nombre")).sendKeys("Modificado");
				driver.findElement(By.id("centro:BotonAccion")).click();
				driver.findElement(By.id("formIndex:botonCentros")).click();
				assertThat(driver.findElement(By.id("Centros:TablaCentros:0:SalidaNombre")).getText(), is("ETSIModificado"));


				break;
			}
			catch(Exception e){

			}
		}

	}



	//Para los tets hemos tenido que usar una estructura de un for junto con un try catch ya que algunas veces saltaba la excepcion StaleElementReferenceException 
	//y otras veces no. Hemos visto aqui https://www.softwaretestingmaterial.com/stale-element-reference-exception-selenium-webdriver/
	//que se soluciona asi.	
	@Requisitos({"RF-18"})
	@Test
	public void buscarCentroTest() {

		for(int i=0; i<=2;i++){
			try{
				driver.get("http://0.0.0.0:8080/ProyectoSII-war/");
				driver.manage().window().setSize(new Dimension(825, 717));
				driver.findElement(By.id("formIndex:botonCentros")).click();
				driver.findElement(By.id("Centros:TablaCentros:globalFilter")).click();
				driver.findElement(By.id("Centros:TablaCentros:globalFilter")).sendKeys("Buscador");
				driver.findElement(By.id("Centros:TablaCentros:0:SalidaNombre")).click();
				assertThat(driver.findElement(By.id("Centros:TablaCentros:0:SalidaNombre")).getText(), is("Buscador"));


				break;
			}
			catch(Exception e){

			}
		}

	}

	//Para los tets hemos tenido que usar una estructura de un for junto con un try catch ya que algunas veces saltaba la excepcion StaleElementReferenceException 
	//y otras veces no. Hemos visto aqui https://www.softwaretestingmaterial.com/stale-element-reference-exception-selenium-webdriver/
	//que se soluciona asi.	
	@Requisitos({"RF-18"})
	@Test
	public void buscarCentroMalTest() {

		for(int i=0; i<=2;i++){
			try{
				driver.get("http://0.0.0.0:8080/ProyectoSII-war/");
				driver.manage().window().setSize(new Dimension(825, 718));
				driver.findElement(By.id("formIndex:botonCentros")).click();
				driver.findElement(By.id("Centros:TablaCentros:globalFilter")).click();
				driver.findElement(By.id("Centros:TablaCentros:globalFilter")).sendKeys("inventao");
				driver.findElement(By.cssSelector("td")).click();
				assertThat(driver.findElement(By.cssSelector("td")).getText(), is("Ningun Centro con esos filtros"));  

				break;
			}
			catch(Exception e){

			}
		}


	}








}
